// Code generated by templ@v0.2.364 DO NOT EDIT.

package user

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func remove() templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_remove_cbe8`,
		Function: `function __templ_remove_cbe8(){var element = this.id;
  element.remove();}`,
		Call: templ.SafeScript(`__templ_remove_cbe8`),
	}
}

func UserDetails(details UserDetail) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"bg-gray-100 py-16\"><div class=\"container mx-auto p-6 bg-white rounded-lg shadow-lg\"><div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\"><div class=\"md:col-span-1\"><div class=\"flex justify-center\"></div><div class=\"mt-4 text-center\"><h2 class=\"text-2xl font-bold\">")
		if err != nil {
			return err
		}
		var_2 := `John Doe`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h2><p class=\"text-gray-600\">")
		if err != nil {
			return err
		}
		var_3 := `Software Developer`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</p></div></div><div class=\"md:col-span-1\"><div class=\"bg-gray-200 p-4 rounded-lg\"><h3 class=\"text-lg font-semibold mb-4\">")
		if err != nil {
			return err
		}
		var_4 := `User Details`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h3><div class=\"flex justify-between mb-2\"><span class=\"text-gray-600\">")
		if err != nil {
			return err
		}
		var_5 := `Email:`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span><span>")
		if err != nil {
			return err
		}
		var_6 := `john.doe@email.com`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></div><div class=\"flex justify-between mb-2\"><span class=\"text-gray-600\">")
		if err != nil {
			return err
		}
		var_7 := `Phone:`
		_, err = templBuffer.WriteString(var_7)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span><span>")
		if err != nil {
			return err
		}
		var_8 := `(123) 456-7890`
		_, err = templBuffer.WriteString(var_8)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></div><div class=\"flex justify-between mb-2\"><span class=\"text-gray-600\">")
		if err != nil {
			return err
		}
		var_9 := `Location:`
		_, err = templBuffer.WriteString(var_9)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span><span>")
		if err != nil {
			return err
		}
		var_10 := `New York, USA`
		_, err = templBuffer.WriteString(var_10)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></div><div class=\"flex justify-between\"><span class=\"text-gray-600\">")
		if err != nil {
			return err
		}
		var_11 := `Joined:`
		_, err = templBuffer.WriteString(var_11)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span><span>")
		if err != nil {
			return err
		}
		var_12 := `January 1, 2022`
		_, err = templBuffer.WriteString(var_12)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span></div><div class=\"mt-4\"><a href=\"/\" class=\"text-blue-500 hover:underline\">")
		if err != nil {
			return err
		}
		var_13 := `Go Back`
		_, err = templBuffer.WriteString(var_13)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></div></div></div></div></div></div><div id=\"test\"></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
